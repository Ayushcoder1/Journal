generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bookmarks {
  user_id    BigInt
  post_id    BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  post       post     @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, post_id])
}

model post {
  id         BigInt      @id @default(autoincrement())
  title      String      @db.VarChar(200)
  content    String?
  published  Boolean?    @default(false)
  authorid   BigInt?
  reads      BigInt?     @default(0)
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  bookmarks  bookmarks[]
  users      users?      @relation(fields: [authorid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  comments   comments[]
}

model users {
  id        BigInt      @id @default(autoincrement())
  email     String      @unique @db.VarChar(60)
  name      String?     @db.VarChar(40)
  password  String      @db.VarChar(40)
  about     String?     @default("Hello fellas, happy reading")
  bookmarks bookmarks[]
  post      post[]
  comments  comments[]
}

model comments {
  id         BigInt   @id @default(autoincrement())
  postid     BigInt
  authorid   BigInt
  content    String
  likes      Int      @default(0)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  post   post  @relation(fields: [postid], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users  users @relation(fields: [authorid], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([postid])
  @@index([authorid])
}